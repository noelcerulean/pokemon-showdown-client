{"version":3,"sources":["../src/battle.ts"],"names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","sprite","battle","scene","addPokemonSprite","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","args","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copyAll","removeTransform","copyTypesFrom","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","concat","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","setAvatar","setName","addSideCondition","effect","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","poke1i","poke1","poke2i","poke2","illusionFound","curPoke","updateSidebar","switchIn","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","animUnsummon","switchOut","log","from","swapTo","kwArgs","target","oslot","swapWith","nslot","faint","animFaint","Battle","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","teamPreviewCount","gameType","rated","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","paused","$frame","$logFrame","BattleScene","BattleSceneStub","Error","resetStep","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","pseudoWeatherName","abilityActive","a","pause","resetTurnsSinceMoved","nextStep","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","prematureEnd","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","pWeather","cond","useMove","move","fromeffect","getEffect","isZ","items","zMoveFrom","slice","window","BattleItems","zMoveType","type","foeTargets","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","damageinfo","hover","damageAnim","trackedMove","runResidualAnim","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","tmp","frompoke","volatilesToCopy","timeOffset","Config","server","afd","moveid","thaw","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","animTransform","tpoke","targetForme","endsWith","isCustomAnim","sanitizeName","typeAnim","already","block","interrupt","time","Number","number","pokeability","targetability","ability2","foeActive","maybeTarget","broken","getSide","upkeep","maxTimeLeft","pwID","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","curhp","colorchar","parsePokemonId","siden","test","slotChart","b","c","d","e","f","getSwitchedPokemon","parsedPokemonid","rememberTeamPreviewPokemon","findCorrespondingPokemon","isInactive","sidename","command","instantAdd","run","runMajor","resetSides","updateGen","ruleName","totalTime","graceTime","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","teamPreview","targetIndex","forGen","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","parseBattleLine","maybeCloseMessagebar","nextLine","err","stack","line","updateBgm","play","resume","skipTurn","forceReset","animationOn","animationOff","shouldStep","startAnimations","animations","finishAnimations","interruptionCount","done","setQueue","queue","setMute","BattleSound","require","global"],"mappings":"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","sourcesContent":["/**\r\n * Pokemon Showdown Battle\r\n *\r\n * This is the main file for handling battle animations\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Layout:\r\n *\r\n * - Battle\r\n *   - Side\r\n *     - Pokemon\r\n *   - BattleScene\r\n *     - BattleLog\r\n *       - BattleTextParser\r\n *\r\n * When a Battle receives a message, it splits the message into tokens\r\n * and parses what happens, updating its own state, and then telling\r\n * BattleScene to do any relevant animations. The tokens then get\r\n * passed directly into BattleLog. If the message is an in-battle\r\n * message, it'll be extracted by BattleTextParser, which adds it to\r\n * both the battle log itself, as well as the messagebar.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\n/** [id, element?, ...misc] */\r\ntype EffectState = any[] & {0: ID};\r\n/** [name, minTimeLeft, maxTimeLeft] */\r\ntype WeatherState = [string, number, number];\r\ntype HPColor = 'r' | 'y' | 'g';\r\n\r\nclass Pokemon implements PokemonDetails, PokemonHealth {\r\n\tname = '';\r\n\tspeciesForme = '';\r\n\r\n\t/**\r\n\t * A string representing information extractable from textual\r\n\t * messages: side, nickname.\r\n\t *\r\n\t * Will be the empty string between Team Preview and the first\r\n\t * switch-in.\r\n\t *\r\n\t * Examples: `p1: Unown` or `p2: Sparky`\r\n\t */\r\n\tident = '';\r\n\t/**\r\n\t * A string representing visible information not included in\r\n\t * ident: species, level, gender, shininess. Level is left off\r\n\t * if it's 100; gender is left off if it's genderless.\r\n\t *\r\n\t * Note: Can be partially filled out in Team Preview, because certain\r\n\t * forme information and shininess isn't visible there. In those\r\n\t * cases, details can change during the first switch-in, but will\r\n\t * otherwise not change over the course of a game.\r\n\t *\r\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\r\n\t */\r\n\tdetails = '';\r\n\t/**\r\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\r\n\t *\r\n\t * As with ident, blank before the first switch-in, and will only\r\n\t * change during the first switch-in.\r\n\t */\r\n\tsearchid = '';\r\n\r\n\tside: Side;\r\n\tslot = 0;\r\n\r\n\tfainted = false;\r\n\thp = 0;\r\n\tmaxhp = 1000;\r\n\tlevel = 100;\r\n\tgender: GenderName = 'N';\r\n\tshiny = false;\r\n\r\n\thpcolor: HPColor = 'g';\r\n\tmoves: string[] = [];\r\n\tability = '';\r\n\tbaseAbility = '';\r\n\titem = '';\r\n\titemEffect = '';\r\n\tprevItem = '';\r\n\tprevItemEffect = '';\r\n\r\n\tboosts: {[stat: string]: number} = {};\r\n\tstatus: StatusName | 'tox' | '' | '???' = '';\r\n\tstatusStage = 0;\r\n\tvolatiles: {[effectid: string]: EffectState} = {};\r\n\tturnstatuses: {[effectid: string]: EffectState} = {};\r\n\tmovestatuses: {[effectid: string]: EffectState} = {};\r\n\tlastMove = '';\r\n\r\n\t/** [[moveName, ppUsed]] */\r\n\tmoveTrack: [string, number][] = [];\r\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\r\n\r\n\tsprite: PokemonSprite;\r\n\r\n\tconstructor(data: PokemonDetails, side: Side) {\r\n\t\tthis.side = side;\r\n\t\tthis.speciesForme = data.speciesForme;\r\n\r\n\t\tthis.details = data.details;\r\n\t\tthis.name = data.name;\r\n\t\tthis.level = data.level;\r\n\t\tthis.shiny = data.shiny;\r\n\t\tthis.gender = data.gender || 'N';\r\n\t\tthis.ident = data.ident;\r\n\t\tthis.searchid = data.searchid;\r\n\r\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn this.side.active.includes(this);\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tprivate getHPColor(): HPColor {\r\n\t\tif (this.hpcolor) return this.hpcolor;\r\n\t\tlet ratio = this.hp / this.maxhp;\r\n\t\tif (ratio > 0.5) return 'g';\r\n\t\tif (ratio > 0.2) return 'y';\r\n\t\treturn 'r';\r\n\t}\r\n\t/** @deprecated */\r\n\tprivate getHPColorClass() {\r\n\t\tswitch (this.getHPColor()) {\r\n\t\tcase 'y': return 'hpbar hpbar-yellow';\r\n\t\tcase 'r': return 'hpbar hpbar-red';\r\n\t\t}\r\n\t\treturn 'hpbar';\r\n\t}\r\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\r\n\t\tlet epsilon = 0.5 / 714;\r\n\r\n\t\tif (pixels === 0) return [0, 0];\r\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\r\n\t\tif (pixels === 9) {\r\n\t\t\tif (color === 'y') { // ratio is > 0.2\r\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\r\n\t\t\t} else { // ratio is <= 0.2\r\n\t\t\t\treturn [9 / 48, 0.2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 24) {\r\n\t\t\tif (color === 'g') { // ratio is > 0.5\r\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\r\n\t\t\t} else { // ratio is exactly 0.5\r\n\t\t\t\treturn [0.5, 0.5];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 48) return [1, 1];\r\n\r\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\r\n\t}\r\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\r\n\t\tif (range[0] === range[1]) {\r\n\t\t\tlet percentage = Math.abs(range[0] * 100);\r\n\t\t\tif (Math.floor(percentage) === percentage) {\r\n\t\t\t\treturn percentage + '%';\r\n\t\t\t}\r\n\t\t\treturn percentage.toFixed(precision) + '%';\r\n\t\t}\r\n\t\tlet lower;\r\n\t\tlet upper;\r\n\t\tif (precision === 0) {\r\n\t\t\tlower = Math.floor(range[0] * 100);\r\n\t\t\tupper = Math.ceil(range[1] * 100);\r\n\t\t} else {\r\n\t\t\tlower = (range[0] * 100).toFixed(precision);\r\n\t\t\tupper = (range[1] * 100).toFixed(precision);\r\n\t\t}\r\n\t\treturn '' + lower + separator + upper + '%';\r\n\t}\r\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\r\n\tgetDamageRange(damage: any): [number, number] {\r\n\t\tif (damage[1] !== 48) {\r\n\t\t\tlet ratio = damage[0] / damage[1];\r\n\t\t\treturn [ratio, ratio];\r\n\t\t} else if (damage.length === undefined) {\r\n\t\t\t// wrong pixel damage.\r\n\t\t\t// this case exists for backward compatibility only.\r\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\r\n\t\t}\r\n\t\t// pixel damage\r\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\r\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\r\n\t\tif (damage[0] === 0) {\r\n\t\t\t// no change in displayed pixel width\r\n\t\t\treturn [0, newrange[1] - newrange[0]];\r\n\t\t}\r\n\t\tif (oldrange[0] < newrange[0]) { // swap order\r\n\t\t\tlet r = oldrange;\r\n\t\t\toldrange = newrange;\r\n\t\t\tnewrange = r;\r\n\t\t}\r\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\r\n\t}\r\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\r\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\r\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\r\n\t\tif (!hpstring || !hpstring.length) return null;\r\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\r\n\t\tif (parenIndex >= 0) {\r\n\t\t\t// old style damage and health reporting\r\n\t\t\tif (parsedamage) {\r\n\t\t\t\tlet damage = parseFloat(hpstring);\r\n\t\t\t\t// unusual check preseved for backward compatbility\r\n\t\t\t\tif (isNaN(damage)) damage = 50;\r\n\t\t\t\tif (heal) {\r\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\r\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\r\n\t\t\t\t}\r\n\t\t\t\t// parse the absolute health information\r\n\t\t\t\tlet ret = this.healthParse(hpstring);\r\n\t\t\t\tif (ret && (ret[1] === 100)) {\r\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\r\n\t\t\t\t\treturn [damage, 100, damage];\r\n\t\t\t\t}\r\n\t\t\t\t// complicated expressions preserved for backward compatibility\r\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\r\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\r\n\t\t\t\treturn [pixels, 48, percent];\r\n\t\t\t}\r\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\r\n\t\t}\r\n\r\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\r\n\t\tlet oldmaxhp = this.maxhp;\r\n\t\tlet oldwidth = this.hpWidth(100);\r\n\t\tlet oldcolor = this.hpcolor;\r\n\r\n\t\tthis.side.battle.parseHealth(hpstring, this);\r\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\r\n\t\t\toldmaxhp = oldhp = this.maxhp;\r\n\t\t}\r\n\r\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\r\n\t\tlet delta = this.hp - oldnum;\r\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\r\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\r\n\t}\r\n\tcheckDetails(details?: string) {\r\n\t\tif (!details) return false;\r\n\t\tif (details === this.details) return true;\r\n\t\tif (this.searchid) return false;\r\n\t\tif (details.indexOf(', shiny') >= 0) {\r\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\r\n\t\t}\r\n\t\t// the actual forme was hidden on Team Preview\r\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\r\n\t\treturn (details === this.details);\r\n\t}\r\n\tgetIdent() {\r\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\r\n\t}\r\n\tremoveVolatile(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasVolatile(volatile)) return;\r\n\t\tdelete this.volatiles[volatile];\r\n\t}\r\n\taddVolatile(volatile: ID, ...args: any[]) {\r\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\r\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasVolatile(volatile: ID) {\r\n\t\treturn !!this.volatiles[volatile];\r\n\t}\r\n\tremoveTurnstatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasTurnstatus(volatile)) return;\r\n\t\tdelete this.turnstatuses[volatile];\r\n\t}\r\n\taddTurnstatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t\tif (this.hasTurnstatus(volatile)) return;\r\n\t\tthis.turnstatuses[volatile] = [volatile];\r\n\t}\r\n\thasTurnstatus(volatile: ID) {\r\n\t\treturn !!this.turnstatuses[volatile];\r\n\t}\r\n\tclearTurnstatuses() {\r\n\t\tfor (let id in this.turnstatuses) {\r\n\t\t\tthis.removeTurnstatus(id as ID);\r\n\t\t}\r\n\t\tthis.turnstatuses = {};\r\n\t\tthis.side.battle.scene.updateStatbar(this);\r\n\t}\r\n\tremoveMovestatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasMovestatus(volatile)) return;\r\n\t\tdelete this.movestatuses[volatile];\r\n\t}\r\n\taddMovestatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tif (this.hasMovestatus(volatile)) return;\r\n\t\tthis.movestatuses[volatile] = [volatile];\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasMovestatus(volatile: ID) {\r\n\t\treturn !!this.movestatuses[volatile];\r\n\t}\r\n\tclearMovestatuses() {\r\n\t\tfor (let id in this.movestatuses) {\r\n\t\t\tthis.removeMovestatus(id as ID);\r\n\t\t}\r\n\t\tthis.movestatuses = {};\r\n\t}\r\n\tclearVolatiles() {\r\n\t\tthis.volatiles = {};\r\n\t\tthis.clearTurnstatuses();\r\n\t\tthis.clearMovestatuses();\r\n\t\tthis.side.battle.scene.clearEffects(this);\r\n\t}\r\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\r\n\t\tif (recursionSource === this.ident) return;\r\n\t\tmoveName = Dex.moves.get(moveName).name;\r\n\t\tif (moveName.charAt(0) === '*') return;\r\n\t\tif (moveName === 'Struggle') return;\r\n\t\tif (this.volatiles.transform) {\r\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\r\n\t\t\tif (!recursionSource) recursionSource = this.ident;\r\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\r\n\t\t\tmoveName = '*' + moveName;\r\n\t\t}\r\n\t\tfor (const entry of this.moveTrack) {\r\n\t\t\tif (moveName === entry[0]) {\r\n\t\t\t\tentry[1] += pp;\r\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.moveTrack.push([moveName, pp]);\r\n\t}\r\n\trememberAbility(ability: string, isNotBase?: boolean) {\r\n\t\tability = Dex.abilities.get(ability).name;\r\n\t\tthis.ability = ability;\r\n\t\tif (!this.baseAbility && !isNotBase) {\r\n\t\t\tthis.baseAbility = ability;\r\n\t\t}\r\n\t}\r\n\tgetBoost(boostStat: BoostStatName) {\r\n\t\tlet boostStatTable = {\r\n\t\t\tatk: 'Atk',\r\n\t\t\tdef: 'Def',\r\n\t\t\tspa: 'SpA',\r\n\t\t\tspd: 'SpD',\r\n\t\t\tspe: 'Spe',\r\n\t\t\taccuracy: 'Accuracy',\r\n\t\t\tevasion: 'Evasion',\r\n\t\t\tspc: 'Spc',\r\n\t\t};\r\n\t\tif (!this.boosts[boostStat]) {\r\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\r\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\r\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\r\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\r\n\t\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\t\tlet goodBoostTable = [\r\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\r\n\t\t\t\t];\r\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t\t}\r\n\t\t\tlet badBoostTable = [\r\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\r\n\t\t\t];\r\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\tlet goodBoostTable = [\r\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\r\n\t\t\t];\r\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tlet badBoostTable = [\r\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\r\n\t\t];\r\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t}\r\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\r\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\r\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\r\n\t}\r\n\tgetBoostType(boostStat: BoostStatName) {\r\n\t\tif (!this.boosts[boostStat]) return 'neutral';\r\n\t\tif (this.boosts[boostStat] > 0) return 'good';\r\n\t\treturn 'bad';\r\n\t}\r\n\tclearVolatile() {\r\n\t\tthis.ability = this.baseAbility;\r\n\t\tthis.boosts = {};\r\n\t\tthis.clearVolatiles();\r\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\r\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\r\n\t\t\t\tthis.moveTrack.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.lastMove = '';\r\n\t\tthis.statusStage = 0;\r\n\t\tthis.statusData.toxicTurns = 0;\r\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\r\n\t}\r\n\t/**\r\n\t * copyAll = false means Baton Pass,\r\n\t * copyAll = true means Illusion breaking\r\n\t */\r\n\tcopyVolatileFrom(pokemon: Pokemon, copyAll?: boolean) {\r\n\t\tthis.boosts = pokemon.boosts;\r\n\t\tthis.volatiles = pokemon.volatiles;\r\n\t\t// this.lastMove = pokemon.lastMove; // I think\r\n\t\tif (!copyAll) {\r\n\t\t\tdelete this.volatiles['airballoon'];\r\n\t\t\tdelete this.volatiles['attract'];\r\n\t\t\tdelete this.volatiles['autotomize'];\r\n\t\t\tdelete this.volatiles['disable'];\r\n\t\t\tdelete this.volatiles['encore'];\r\n\t\t\tdelete this.volatiles['foresight'];\r\n\t\t\tdelete this.volatiles['gmaxchistrike'];\r\n\t\t\tdelete this.volatiles['imprison'];\r\n\t\t\tdelete this.volatiles['laserfocus'];\r\n\t\t\tdelete this.volatiles['mimic'];\r\n\t\t\tdelete this.volatiles['miracleeye'];\r\n\t\t\tdelete this.volatiles['nightmare'];\r\n\t\t\tdelete this.volatiles['smackdown'];\r\n\t\t\tdelete this.volatiles['stockpile1'];\r\n\t\t\tdelete this.volatiles['stockpile2'];\r\n\t\t\tdelete this.volatiles['stockpile3'];\r\n\t\t\tdelete this.volatiles['torment'];\r\n\t\t\tdelete this.volatiles['typeadd'];\r\n\t\t\tdelete this.volatiles['typechange'];\r\n\t\t\tdelete this.volatiles['yawn'];\r\n\t\t}\r\n\t\tdelete this.volatiles['transform'];\r\n\t\tdelete this.volatiles['formechange'];\r\n\r\n\t\tpokemon.boosts = {};\r\n\t\tpokemon.volatiles = {};\r\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\r\n\t\tpokemon.statusStage = 0;\r\n\t}\r\n\tcopyTypesFrom(pokemon: Pokemon) {\r\n\t\tconst [types, addedType] = pokemon.getTypes();\r\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\r\n\t\tif (addedType) {\r\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\r\n\t\t} else {\r\n\t\t\tthis.removeVolatile('typeadd' as ID);\r\n\t\t}\r\n\t}\r\n\tgetTypes(serverPokemon?: ServerPokemon): [ReadonlyArray<TypeName>, TypeName | ''] {\r\n\t\tlet types: ReadonlyArray<TypeName>;\r\n\t\tif (this.volatiles.typechange) {\r\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\r\n\t\t} else {\r\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\r\n\t\t}\r\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\r\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\r\n\t\t\tif (!types.length) types = ['Normal'];\r\n\t\t}\r\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\r\n\t\treturn [types, addedType];\r\n\t}\r\n\tisGrounded(serverPokemon?: ServerPokemon) {\r\n\t\tconst battle = this.side.battle;\r\n\t\tif (battle.hasPseudoWeather('Gravity')) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['smackdown']) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\r\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\r\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'ironball') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ability === 'levitate') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (item === 'airballoon') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\r\n\t}\r\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\r\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\r\n\t\tconst ability = this.side.battle.dex.abilities.get(\r\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\r\n\t\t);\r\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn ability.name;\r\n\t}\r\n\tgetTypeList(serverPokemon?: ServerPokemon) {\r\n\t\tconst [types, addedType] = this.getTypes(serverPokemon);\r\n\t\treturn addedType ? types.concat(addedType) : types;\r\n\t}\r\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\r\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\r\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\r\n\t}\r\n\tgetSpecies(serverPokemon?: ServerPokemon) {\r\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\r\n\t}\r\n\tgetBaseSpecies() {\r\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\r\n\t}\r\n\treset() {\r\n\t\tthis.clearVolatile();\r\n\t\tthis.hp = this.maxhp;\r\n\t\tthis.fainted = false;\r\n\t\tthis.status = '';\r\n\t\tthis.moveTrack = [];\r\n\t\tthis.name = this.name || this.speciesForme;\r\n\t}\r\n\t// This function is used for two things:\r\n\t//   1) The percentage to display beside the HP bar.\r\n\t//   2) The width to draw an HP bar.\r\n\t//\r\n\t// This function is NOT used in the calculation of any other displayed\r\n\t// percentages or ranges, which have their own, more complex, formulae.\r\n\thpWidth(maxWidth: number) {\r\n\t\tif (this.fainted || !this.hp) return 0;\r\n\r\n\t\t// special case for low health...\r\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\r\n\r\n\t\tif (this.maxhp === 48) {\r\n\t\t\t// Draw the health bar to the middle of the range.\r\n\t\t\t// This affects the width of the visual health bar *only*; it\r\n\t\t\t// does not affect the ranges displayed in any way.\r\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\r\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\r\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\r\n\t\t}\r\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\r\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\r\n\t\t\tpercentage = 99;\r\n\t\t}\r\n\t\treturn percentage * maxWidth / 100;\r\n\t}\r\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\r\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\r\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\r\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\r\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.sprite) this.sprite.destroy();\r\n\t\tthis.sprite = null!;\r\n\t\tthis.side = null!;\r\n\t}\r\n}\r\n\r\nclass Side {\r\n\tbattle: Battle;\r\n\tname = '';\r\n\tid = '';\r\n\tsideid: SideID;\r\n\tn: number;\r\n\tisFar: boolean;\r\n\tfoe: Side = null!;\r\n\tally: Side | null = null;\r\n\tavatar: string = 'unknown';\r\n\trating: string = '';\r\n\ttotalPokemon = 6;\r\n\tx = 0;\r\n\ty = 0;\r\n\tz = 0;\r\n\tmissedPokemon: Pokemon = null!;\r\n\r\n\twisher: Pokemon | null = null;\r\n\r\n\tactive = [null] as (Pokemon | null)[];\r\n\tlastPokemon = null as Pokemon | null;\r\n\tpokemon = [] as Pokemon[];\r\n\r\n\t/** [effectName, levels, minDuration, maxDuration] */\r\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\r\n\r\n\tconstructor(battle: Battle, n: number) {\r\n\t\tthis.battle = battle;\r\n\t\tthis.n = n;\r\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\r\n\t\tthis.isFar = !!(n % 2);\r\n\t}\r\n\r\n\trollTrainerSprites() {\r\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\r\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\r\n\t}\r\n\r\n\tbehindx(offset: number) {\r\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehindy(offset: number) {\r\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\r\n\t}\r\n\tleftof(offset: number) {\r\n\t\treturn (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehind(offset: number) {\r\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\r\n\tclearPokemon() {\r\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\r\n\t\tthis.pokemon = [];\r\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\r\n\t\tthis.lastPokemon = null;\r\n\t}\r\n\treset() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.sideConditions = {};\r\n\t}\r\n\tsetAvatar(avatar: string) {\r\n\t\tthis.avatar = avatar;\r\n\t}\r\n\tsetName(name: string, avatar?: string) {\r\n\t\tif (name) this.name = name;\r\n\t\tthis.id = toID(this.name);\r\n\t\tif (avatar) {\r\n\t\t\tthis.setAvatar(avatar);\r\n\t\t} else {\r\n\t\t\tthis.rollTrainerSprites();\r\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\r\n\t\t}\r\n\t}\r\n\taddSideCondition(effect: Effect) {\r\n\t\tlet condition = effect.id;\r\n\t\tif (this.sideConditions[condition]) {\r\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\r\n\t\t\t\tthis.sideConditions[condition][1]++;\r\n\t\t\t}\r\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\r\n\t\tswitch (condition) {\r\n\t\tcase 'auroraveil':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\r\n\t\t\tbreak;\r\n\t\tcase 'reflect':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'safeguard':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'lightscreen':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'mist':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'tailwind':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? 4 : 3, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'luckychant':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'stealthrock':\r\n\t\tcase 'spikes':\r\n\t\tcase 'toxicspikes':\r\n\t\tcase 'stickyweb':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'gmaxwildfire':\r\n\t\tcase 'gmaxvolcalith':\r\n\t\tcase 'gmaxvinelash':\r\n\t\tcase 'gmaxcannonade':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'grasspledge':\r\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'waterpledge':\r\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'firepledge':\r\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t}\r\n\tremoveSideCondition(condition: string) {\r\n\t\tconst id = toID(condition);\r\n\t\tif (!this.sideConditions[id]) return;\r\n\t\tdelete this.sideConditions[id];\r\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\r\n\t}\r\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\r\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\r\n\r\n\t\tconst data = this.battle.parseDetails(name, ident, details);\r\n\t\tconst poke = new Pokemon(data, this);\r\n\t\tif (oldItem) poke.item = oldItem;\r\n\r\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\r\n\t\tpoke.reset();\r\n\r\n\t\tif (replaceSlot >= 0) {\r\n\t\t\tthis.pokemon[replaceSlot] = poke;\r\n\t\t} else {\r\n\t\t\tthis.pokemon.push(poke);\r\n\t\t}\r\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\r\n\t\t\t// check for Illusion\r\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\r\n\t\t\tlet toRemove = -1;\r\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\r\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\r\n\t\t\t\tif (!poke1.searchid) continue;\r\n\t\t\t\tif (poke1.searchid in existingTable) {\r\n\t\t\t\t\tlet poke2i = existingTable[poke1.searchid];\r\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\r\n\t\t\t\t\tif (poke === poke1) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (poke === poke2) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\texistingTable[poke1.searchid] = poke1i;\r\n\t\t\t}\r\n\t\t\tif (toRemove >= 0) {\r\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\r\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\r\n\t\t\t\t\tlet illusionFound = null;\r\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!illusionFound) {\r\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\r\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\r\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\r\n\t\t\t\t\t\t// and reguessed.\r\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (illusionFound) {\r\n\t\t\t\t\t\tillusionFound.fainted = true;\r\n\t\t\t\t\t\tillusionFound.hp = 0;\r\n\t\t\t\t\t\tillusionFound.status = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.battle.scene.updateSidebar(this);\r\n\r\n\t\treturn poke;\r\n\t}\r\n\r\n\tswitchIn(pokemon: Pokemon, slot?: number) {\r\n\t\tif (slot === undefined) slot = pokemon.slot;\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tif (['batonpass', 'zbatonpass'].includes(this.lastPokemon?.lastMove!)) {\r\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!);\r\n\t\t}\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot);\r\n\t}\r\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (oldpokemon === pokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\r\n\t\t\toldpokemon.clearVolatile();\r\n\t\t}\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\r\n\t}\r\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (pokemon === oldpokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tpokemon.clearVolatile();\r\n\t\tif (oldpokemon) {\r\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\r\n\t\t\tpokemon.hp = oldpokemon.hp;\r\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\r\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\r\n\t\t\tpokemon.status = oldpokemon.status;\r\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\r\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\r\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\r\n\t\t\t// technically we also know its status but only at the end of the turn, not here\r\n\t\t\toldpokemon.fainted = false;\r\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\r\n\t\t\toldpokemon.status = '???';\r\n\t\t}\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\r\n\t\t}\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t}\r\n\tswitchOut(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tif (pokemon.lastMove !== 'batonpass' && pokemon.lastMove !== 'zbatonpass') {\r\n\t\t\tpokemon.clearVolatile();\r\n\t\t} else {\r\n\t\t\tpokemon.removeVolatile('transform' as ID);\r\n\t\t\tpokemon.removeVolatile('formechange' as ID);\r\n\t\t}\r\n\t\tif (pokemon.lastMove === 'uturn' || pokemon.lastMove === 'voltswitch' || pokemon.lastMove === 'shadowpivot') {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: pokemon.lastMove});\r\n\t\t} else if (pokemon.lastMove !== 'batonpass' && pokemon.lastMove !== 'zbatonpass') {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident]);\r\n\t\t}\r\n\t\tpokemon.statusData.toxicTurns = 0;\r\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon);\r\n\t}\r\n\tswapTo(pokemon: Pokemon, slot: number, kwArgs: KWArgs) {\r\n\t\tif (pokemon.slot === slot) return;\r\n\t\tlet target = this.active[slot];\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\r\n\t\tpokemon.slot = slot;\r\n\t\tif (target) target.slot = oslot;\r\n\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\r\n\t\t// method provided for backwards compatibility only\r\n\t\tif (pokemon === target) return;\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\t\tlet nslot = target.slot;\r\n\r\n\t\tpokemon.slot = nslot;\r\n\t\ttarget.slot = oslot;\r\n\t\tthis.active[nslot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tthis.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\r\n\t\tthis.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tpokemon.clearVolatile();\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tpokemon.fainted = true;\r\n\t\tpokemon.hp = 0;\r\n\r\n\t\tthis.battle.scene.animFaint(pokemon);\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.battle = null!;\r\n\t\tthis.foe = null!;\r\n\t}\r\n}\r\n\r\ninterface PokemonDetails {\r\n\tdetails: string;\r\n\tname: string;\r\n\tspeciesForme: string;\r\n\tlevel: number;\r\n\tshiny: boolean;\r\n\tgender: GenderName | '';\r\n\tident: string;\r\n\tsearchid: string;\r\n}\r\ninterface PokemonHealth {\r\n\thp: number;\r\n\tmaxhp: number;\r\n\thpcolor: HPColor | '';\r\n\tstatus: StatusName | 'tox' | '' | '???';\r\n\tfainted?: boolean;\r\n}\r\ninterface ServerPokemon extends PokemonDetails, PokemonHealth {\r\n\tident: string;\r\n\tdetails: string;\r\n\tcondition: string;\r\n\tactive: boolean;\r\n\t/** unboosted stats */\r\n\tstats: {\r\n\t\tatk: number,\r\n\t\tdef: number,\r\n\t\tspa: number,\r\n\t\tspd: number,\r\n\t\tspe: number,\r\n\t};\r\n\t/** currently an ID, will revise to name */\r\n\tmoves: string[];\r\n\t/** currently an ID, will revise to name */\r\n\tbaseAbility: string;\r\n\t/** currently an ID, will revise to name */\r\n\tability?: string;\r\n\t/** currently an ID, will revise to name */\r\n\titem: string;\r\n\t/** currently an ID, will revise to name */\r\n\tpokeball: string;\r\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\r\n\tgigantamax: string | false;\r\n}\r\n\r\nclass Battle {\r\n\tscene: BattleScene | BattleSceneStub;\r\n\r\n\tsidesSwitched = false;\r\n\r\n\tstepQueue: string[];\r\n\t/** See battle.instantAdd */\r\n\tpreemptStepQueue: string[] = [];\r\n\twaitForAnimations: true | false | 'simult' = true;\r\n\t/** the index of `stepQueue` currently being animated */\r\n\tcurrentStep = 0;\r\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\r\n\tseeking: number | null = null;\r\n\r\n\tactiveMoveIsSpread: string | null = null;\r\n\r\n\tsubscription: ((state:\r\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\r\n\t) => void) | null;\r\n\r\n\tmute = false;\r\n\tmessageFadeTime = 300;\r\n\tmessageShownTime = 1;\r\n\t/** for tracking when to accelerate animations in long battles full of double switches */\r\n\tturnsSinceMoved = 0;\r\n\r\n\t/**\r\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\r\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\r\n\t */\r\n\tturn = -1;\r\n\t/**\r\n\t * Are we at the end of the queue and waiting for more input?\r\n\t *\r\n\t * In addition to at the end of a battle, this is also true if you're\r\n\t * playing/watching a battle live, and waiting for a player to make a move.\r\n\t */\r\n\tatQueueEnd = false;\r\n\t/**\r\n\t * Has the battle ever been played or fast-forwarded?\r\n\t *\r\n\t * This is not exactly `turn > 0` because if you start playing a replay,\r\n\t * then pause before turn 1, `turn` will still be 0, but playback should\r\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\r\n\t */\r\n\tstarted = false;\r\n\t/**\r\n\t * Has playback gotten to the point where a player has won or tied?\r\n\t * (Affects whether BGM is playing)\r\n\t */\r\n\tended = false;\r\n\tisReplay = false;\r\n\tusesUpkeep = false;\r\n\tweather = '' as ID;\r\n\tpseudoWeather = [] as WeatherState[];\r\n\tweatherTimeLeft = 0;\r\n\tweatherMinTimeLeft = 0;\r\n\t/**\r\n\t * The side from which perspective we're viewing. Should be identical to\r\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\r\n\t * near side, and `mySide` is the active player.\r\n\t */\r\n\tmySide: Side = null!;\r\n\tnearSide: Side = null!;\r\n\tfarSide: Side = null!;\r\n\tp1: Side = null!;\r\n\tp2: Side = null!;\r\n\tp3?: Side = null!;\r\n\tp4?: Side = null!;\r\n\tpokemonControlled = 0;\r\n\tsides: Side[] = null!;\r\n\tmyPokemon: ServerPokemon[] | null = null;\r\n\tmyAllyPokemon: ServerPokemon[] | null = null;\r\n\tlastMove = '';\r\n\r\n\tgen = 8;\r\n\tdex: ModdedDex = Dex;\r\n\tteamPreviewCount = 0;\r\n\tspeciesClause = false;\r\n\ttier = '';\r\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\r\n\trated: string | boolean = false;\r\n\tisBlitz = false;\r\n\tendLastTurnPending = false;\r\n\ttotalTimeLeft = 0;\r\n\tgraceTimeLeft = 0;\r\n\t/**\r\n\t * true: timer on, state unknown\r\n\t * false: timer off\r\n\t * number: seconds left this turn\r\n\t */\r\n\tkickingInactive: number | boolean = false;\r\n\r\n\t// options\r\n\tid = '';\r\n\t/** used to forward some information to the room in the old client */\r\n\troomid = '';\r\n\thardcoreMode = false;\r\n\tignoreNicks = !!Dex.prefs('ignorenicks');\r\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\r\n\tignoreSpects = !!Dex.prefs('ignorespects');\r\n\tdebug: boolean;\r\n\tjoinButtons = false;\r\n\r\n\t/**\r\n\t * The actual pause state. Will only be true if playback is actually\r\n\t * paused, not just waiting for the opponent to make a move.\r\n\t */\r\n\tpaused: boolean;\r\n\r\n\tconstructor(options: {\r\n\t\t$frame?: JQuery<HTMLElement>,\r\n\t\t$logFrame?: JQuery<HTMLElement>,\r\n\t\tid?: ID,\r\n\t\tlog?: string[],\r\n\t\tpaused?: boolean,\r\n\t\tisReplay?: boolean,\r\n\t\tdebug?: boolean,\r\n\t\tsubscription?: Battle['subscription'],\r\n\t} = {}) {\r\n\t\tthis.id = options.id || '';\r\n\r\n\t\tif (options.$frame && options.$logFrame) {\r\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\r\n\t\t} else if (!options.$frame && !options.$logFrame) {\r\n\t\t\tthis.scene = new BattleSceneStub();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\r\n\t\t}\r\n\r\n\t\tthis.paused = !!options.paused;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.debug = !!options.debug;\r\n\t\tthis.stepQueue = options.log || [];\r\n\t\tthis.subscription = options.subscription || null;\r\n\r\n\t\tthis.p1 = new Side(this, 0);\r\n\t\tthis.p2 = new Side(this, 1);\r\n\t\tthis.sides = [this.p1, this.p2];\r\n\t\tthis.p2.foe = this.p1;\r\n\t\tthis.p1.foe = this.p2;\r\n\t\tthis.nearSide = this.mySide = this.p1;\r\n\t\tthis.farSide = this.p2;\r\n\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsubscribe(listener: Battle['subscription']) {\r\n\t\tthis.subscription = listener;\r\n\t}\r\n\r\n\tremovePseudoWeather(weather: string) {\r\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\r\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\r\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\r\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\thasPseudoWeather(weather: string) {\r\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\r\n\t\t\tif (weather === pseudoWeatherName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tngasActive() {\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted && active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tabilityActive(abilities: string[]) {\r\n\t\tif (this.ngasActive()) {\r\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\r\n\t\t\tif (!abilities.length) return false;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted && abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treset() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.resetStep();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\tresetStep() {\r\n\t\t// battle state\r\n\t\tthis.turn = -1;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.ended = false;\r\n\t\tthis.atQueueEnd = false;\r\n\t\tthis.weather = '' as ID;\r\n\t\tthis.weatherTimeLeft = 0;\r\n\t\tthis.weatherMinTimeLeft = 0;\r\n\t\tthis.pseudoWeather = [];\r\n\t\tthis.lastMove = '';\r\n\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tif (side) side.reset();\r\n\t\t}\r\n\t\tthis.myPokemon = null;\r\n\t\tthis.myAllyPokemon = null;\r\n\r\n\t\t// DOM state\r\n\t\tthis.scene.reset();\r\n\r\n\t\t// activity queue state\r\n\t\tthis.activeMoveIsSpread = null;\r\n\t\tthis.currentStep = 0;\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t\tthis.nextStep();\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.scene.destroy();\r\n\r\n\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\r\n\t\t\tthis.sides[i] = null!;\r\n\t\t}\r\n\t\tthis.mySide = null!;\r\n\t\tthis.nearSide = null!;\r\n\t\tthis.farSide = null!;\r\n\t\tthis.p1 = null!;\r\n\t\tthis.p2 = null!;\r\n\t\tthis.p3 = null!;\r\n\t\tthis.p4 = null!;\r\n\t}\r\n\r\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\r\n\t\tthis.scene.log.add(args, kwArgs, preempt);\r\n\t}\r\n\r\n\tresetToCurrentTurn() {\r\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\r\n\t}\r\n\tswitchSides() {\r\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\r\n\t}\r\n\tsetPerspective(sideid: SideID) {\r\n\t\tif (this.mySide.sideid === sideid) return;\r\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\r\n\t\tconst side = this[sideid];\r\n\t\tif (!side) return;\r\n\t\tthis.mySide = side;\r\n\r\n\t\tif ((side.n % 2) === this.p1.n) {\r\n\t\t\tthis.sidesSwitched = false;\r\n\t\t\tthis.nearSide = this.p1;\r\n\t\t\tthis.farSide = this.p2;\r\n\t\t} else {\r\n\t\t\tthis.sidesSwitched = true;\r\n\t\t\tthis.nearSide = this.p2;\r\n\t\t\tthis.farSide = this.p1;\r\n\t\t}\r\n\t\tthis.nearSide.isFar = false;\r\n\t\tthis.farSide.isFar = true;\r\n\t\tif (this.sides.length > 2) {\r\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\r\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\r\n\t\t}\r\n\r\n\t\tthis.resetToCurrentTurn();\r\n\t}\r\n\r\n\t//\r\n\t// activities\r\n\t//\r\n\tstart() {\r\n\t\tthis.log(['start']);\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t}\r\n\twinner(winner?: string) {\r\n\t\tthis.log(['win', winner || '']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tprematureEnd() {\r\n\t\tthis.log(['message', 'This replay ends here.']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tendLastTurn() {\r\n\t\tif (this.endLastTurnPending) {\r\n\t\t\tthis.endLastTurnPending = false;\r\n\t\t\tthis.scene.updateStatbars();\r\n\t\t}\r\n\t}\r\n\tsetHardcoreMode(mode: boolean) {\r\n\t\tthis.hardcoreMode = mode;\r\n\t\tthis.scene.updateSidebars();\r\n\t\tthis.scene.updateWeather(true);\r\n\t}\r\n\tsetTurn(turnNum: number) {\r\n\t\tif (turnNum === this.turn + 1) {\r\n\t\t\tthis.endLastTurnPending = true;\r\n\t\t}\r\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\r\n\t\tthis.turn = turnNum;\r\n\t\tthis.started = true;\r\n\r\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\r\n\r\n\t\tthis.scene.incrementTurn();\r\n\r\n\t\tif (this.seeking !== null) {\r\n\t\t\tif (turnNum >= this.seeking) {\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.subscription?.('turn');\r\n\t\t}\r\n\t}\r\n\tresetTurnsSinceMoved() {\r\n\t\tthis.turnsSinceMoved = 0;\r\n\t\tthis.scene.updateAcceleration();\r\n\t}\r\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\r\n\t\tlet weather = toID(weatherName);\r\n\t\tif (!weather || weather === 'none') {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\t\tif (isUpkeep) {\r\n\t\t\tif (this.weather && this.weatherTimeLeft) {\r\n\t\t\t\tthis.weatherTimeLeft--;\r\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\r\n\t\t\t}\r\n\t\t\tif (this.seeking === null) {\r\n\t\t\t\tthis.scene.upkeepWeather();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (ability) {\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\r\n\t\t\t} else if (isExtremeWeather) {\r\n\t\t\t\tthis.weatherTimeLeft = 0;\r\n\t\t\t\tthis.weatherMinTimeLeft = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.weather = weather;\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tswapSideConditions() {\r\n\t\tconst sideConditions = [\r\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t];\r\n\t\tif (this.gameType === 'freeforall') {\r\n\t\t\t// TODO: Add FFA support\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tlet side1 = this.sides[0];\r\n\t\t\tlet side2 = this.sides[1];\r\n\t\t\tfor (const id of sideConditions) {\r\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\r\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\r\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\r\n\t\t\t\t\t];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\r\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t\tside1.removeSideCondition(id);\r\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\r\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tside2.removeSideCondition(id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tupdateTurnCounters() {\r\n\t\tfor (const pWeather of this.pseudoWeather) {\r\n\t\t\tif (pWeather[1]) pWeather[1]--;\r\n\t\t\tif (pWeather[2]) pWeather[2]--;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\tlet cond = side.sideConditions[id];\r\n\t\t\t\tif (cond[2]) cond[2]--;\r\n\t\t\t\tif (cond[3]) cond[3]--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\r\n\t\t\t\tpoke.clearTurnstatuses();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\tthis.activateAbility(pokemon, fromeffect);\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tif (move.id === 'focuspunch') {\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t}\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (fromeffect.id === 'sleeptalk') {\r\n\t\t\tpokemon.rememberMove(move.name, 0);\r\n\t\t} else if (!fromeffect.id || fromeffect.id === 'pursuit') {\r\n\t\t\tlet moveName = move.name;\r\n\t\t\tif (move.isZ) {\r\n\t\t\t\tpokemon.item = move.isZ;\r\n\t\t\t\tlet item = Dex.items.get(move.isZ);\r\n\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\r\n\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\r\n\t\t\t\tmoveName = moveName.slice(2);\r\n\t\t\t\tmove = Dex.moves.get(moveName);\r\n\t\t\t\tif (window.BattleItems) {\r\n\t\t\t\t\tfor (let item in BattleItems) {\r\n\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pp = 1;\r\n\t\t\t// Sticky Web is never affected by pressure\r\n\t\t\tif (this.abilityActive(['Pressure']) && move.id !== 'stickyweb') {\r\n\t\t\t\tconst foeTargets = [];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!target && this.gameType === 'singles' &&\r\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf'].includes(move.target)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Hardcode for moves without a target in singles\r\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\r\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(move.target)) {\r\n\t\t\t\t\t// We loop through all sides here for FFA\r\n\t\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\t\tif (side === pokemon.side || side === pokemon.side.ally) continue;\r\n\t\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\t\tfoeTargets.push(active);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\r\n\t\t\t\t\tfoeTargets.push(target);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const foe of foeTargets) {\r\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\r\n\t\t\t\t\t\tpp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.rememberMove(moveName, pp);\r\n\t\t}\r\n\t\tpokemon.lastMove = move.id;\r\n\t\tthis.lastMove = move.id;\r\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\r\n\t\t\tpokemon.side.wisher = pokemon;\r\n\t\t}\r\n\t}\r\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\r\n\t\tif (this.seeking !== null || kwArgs.still) return;\r\n\r\n\t\tif (!target) target = pokemon.side.foe.active[0];\r\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\r\n\t\tif (kwArgs.miss && target.side) {\r\n\t\t\ttarget = target.side.missedPokemon;\r\n\t\t}\r\n\t\tif (kwArgs.notarget) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\r\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\r\n\t\tif (!kwArgs.spread) {\r\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet targets = [pokemon];\r\n\t\tif (kwArgs.spread === '.') {\r\n\t\t\t//  no target was hit by the attack\r\n\t\t\ttargets.push(target.side.missedPokemon);\r\n\t\t} else {\r\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\r\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\r\n\t\t\t\tif (!curTarget) {\r\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttargets.push(curTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\r\n\t}\r\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (effect.id in BattleStatusAnims) {\r\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\r\n\t\t}\r\n\t\tthis.activateAbility(pokemon, effect);\r\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\r\n\t\tswitch (effect.id) {\r\n\t\tcase 'par':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\r\n\t\t\tbreak;\r\n\t\tcase 'frz':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\r\n\t\t\tbreak;\r\n\t\tcase 'slp':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\r\n\t\t\tpokemon.statusData.sleepTurns++;\r\n\t\t\tbreak;\r\n\t\tcase 'truant':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'recharge':\r\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'focuspunch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'shelltrap':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'flinch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'attract':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.scene.animReset(pokemon);\r\n\t}\r\n\r\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\r\n\t\tif (!pokemon || !effectOrName) return;\r\n\t\tif (typeof effectOrName !== 'string') {\r\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\r\n\t\t\teffectOrName = effectOrName.name;\r\n\t\t}\r\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\r\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\r\n\t}\r\n\r\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\r\n\t\tif (nextArgs && nextKwargs) {\r\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\r\n\t\t\t\targs[2] = 'ability: Sturdy';\r\n\t\t\t}\r\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\r\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\r\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\r\n\t\t\t)) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Shadow Sap' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\r\n\t\t\t\tif (this.scene.closeMessagebar()) {\r\n\t\t\t\t\tthis.currentStep--;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkwArgs.simult = '.';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (kwArgs.then) this.waitForAnimations = false;\r\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\r\n\r\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\r\n\t\tswitch (args[0]) {\r\n\t\tcase '-damage': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\r\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\r\n\t\t\t\t\t\titemPoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'baddreams':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'curse':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\tcase 'shadowsap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bind':\r\n\t\t\t\tcase 'wrap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\r\n\t\t\t\tif (damage[1] !== 100) {\r\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\r\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\r\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\r\n\t\t\t\t\t\thover += ' pixels';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// battle-log will convert this into <abbr>\r\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\r\n\t\t\t\t}\r\n\t\t\t\targs[3] = damageinfo;\r\n\t\t\t}\r\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-heal': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\r\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\r\n\t\t\t\t\t\tpoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'lunardance':\r\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\r\n\t\t\t\t\t\ttrackedMove[1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'healingwish':\r\n\t\t\t\t\tthis.lastMove = 'healing-wish';\r\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\r\n\t\t\t\t\tpoke.side.wisher = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wish':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\r\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sethp': {\r\n\t\t\tfor (let k = 0; k < 2; k++) {\r\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\r\n\t\t\t\tif (cpoke) {\r\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\r\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\r\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\r\n\t\t\t\t\tlet diff = damage[0];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-boost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] += amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\r\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-unboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] -= amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-setboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tpoke.boosts[stat] = amount;\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tlet tmp = poke.boosts[stat];\r\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t\tpoke2.boosts[stat] = tmp;\r\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\r\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearpositiveboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(args[3]);\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'spectralthief': case 'catburglary': case 'shadowrobbery':\r\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\r\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearnegativeboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-copyboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tif (this.gen >= 6) {\r\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'laserfocus'];\r\n\t\t\t\tfor (const volatile of volatilesToCopy) {\r\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\r\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.boosts = {};\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-invertboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearallboost': {\r\n\t\t\tlet timeOffset = this.scene.timeOffset;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\tactive.boosts = {};\r\n\t\t\t\t\t\tthis.scene.timeOffset = timeOffset;\r\n\t\t\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-crit': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-supereffective': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\r\n\t\t\t\tif (window.Config?.server?.afd) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-resisted': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-immune': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-miss': {\r\n\t\t\tlet target = this.getPokemon(args[2]);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fail': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tif (fromeffect.id === 'uproar') {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unboost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.animReset(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-block': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'safetygoggles':\r\n\t\t\t\tpoke.item = 'Safety Goggles';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protectivepads':\r\n\t\t\t\tpoke.item = 'Protective Pads';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-center': case '-notarget': case '-ohko':\r\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-zpower': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-prepare': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet moveid = toID(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\r\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mustrecharge': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-status': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\r\n\t\t\tpoke.status = args[2] as StatusName;\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\tofpoke.item = effect.name;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (args[2]) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\r\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\r\n\t\t\t\tif (effect.id === 'rest') {\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\r\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\r\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-curestatus': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'flamewheel':\r\n\t\t\t\tcase 'flareblitz':\r\n\t\t\t\tcase 'fusionflare':\r\n\t\t\t\tcase 'sacredfire':\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\tcase 'steameruption':\r\n\t\t\t\t\tkwArgs.thaw = '.';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (poke) {\r\n\t\t\t\tpoke.status = '';\r\n\t\t\t\tswitch (args[2]) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'tox':\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slp':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'par':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frz':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const target of poke.side.pokemon) {\r\n\t\t\t\ttarget.status = '';\r\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-item': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.item = item.name;\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'pickup':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'recycle':\r\n\t\t\t\t\tpoke.itemEffect = 'found';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frisk':\r\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\r\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\r\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'magician':\r\n\t\t\t\tcase 'pickpocket':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'thief':\r\n\t\t\t\tcase 'shadowbandit':\r\n\t\t\t\tcase 'covet':\r\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\r\n\t\t\t\t\tofpoke!.item = '';\r\n\t\t\t\t\tofpoke!.itemEffect = '';\r\n\t\t\t\t\tofpoke!.prevItem = item.name;\r\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\r\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\r\n\t\t\t\t\tpoke.itemEffect = 'stolen';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'harvest':\r\n\t\t\t\t\tpoke.itemEffect = 'harvested';\r\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bestow':\r\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo':\r\n\t\t\t\tcase 'shadowswap':\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tpoke.itemEffect = 'tricked';\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-enditem': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.item = '';\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.prevItem = item.name;\r\n\t\t\tpoke.prevItemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tpoke.addVolatile('itemremoved' as ID);\r\n\t\t\tif (kwArgs.eat) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (kwArgs.weaken) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'fling':\r\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\r\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealeat':\r\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gem':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'incinerate':\r\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\r\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focussash':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusband':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'redcard':\r\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-ability': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'trace':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerofalchemy':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roleplay':\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\tif (kwArgs.fail) {\r\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-endability': {\r\n\t\t\t// deprecated; use |-start| for Gastro Acid\r\n\t\t\t// and the third arg of |-ability| for Entrainment et al\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tpoke.ability = '(suppressed)';\r\n\r\n\t\t\tif (ability.id) {\r\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'detailschange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.removeVolatile('formechange' as ID);\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\r\n\t\t\tlet newSpeciesForme = args[2];\r\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\r\n\t\t\t\tif (level.charAt(0) === 'L') {\r\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\r\n\t\t\t\t}\r\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\r\n\t\t\t}\r\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\r\n\r\n\t\t\tpoke.speciesForme = newSpeciesForme;\r\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\r\n\r\n\t\t\tpoke.details = args[2];\r\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\r\n\r\n\t\t\tthis.scene.animTransform(poke, true, true);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-transform': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\r\n\t\t\tpoke.boosts = {...tpoke.boosts};\r\n\t\t\tpoke.copyTypesFrom(tpoke);\r\n\t\t\tpoke.ability = tpoke.ability;\r\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\r\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\r\n\t\t\tconst pokemon = tpoke;\r\n\t\t\tconst shiny = tpoke.shiny;\r\n\t\t\tconst gender = tpoke.gender;\r\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender);\r\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\r\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\r\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\r\n\t\t\t}\r\n\t\t\tthis.scene.animTransform(poke);\r\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\r\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-formechange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet species = Dex.species.get(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet isCustomAnim = false;\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\t\t\tif (this.gen >= 7) poke.removeVolatile('autotomize' as ID);\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mega': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[3]);\r\n\t\t\tif (args[3]) {\r\n\t\t\t\tpoke.item = item.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-primal': case '-burst': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-start': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'typechange':\r\n\t\t\t\tif ((ofpoke && fromeffect.id === ('reflecttype')) || (ofpoke && fromeffect.id === ('concealment'))) {\r\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\r\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\r\n\t\t\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'typeadd':\r\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\r\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\r\n\t\t\t\tif (kwArgs.silent) break;\r\n\t\t\t\tthis.scene.typeAnim(poke, type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dynamax':\r\n\t\t\t\tpoke.addVolatile('dynamax' as ID);\r\n\t\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'powertrick':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'foresight':\r\n\t\t\tcase 'miracleeye':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'telekinesis':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confusion':\r\n\t\t\t\tif (!kwArgs.already) {\r\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'leechseed':\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'yawn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'taunt':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'imprison':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'disable':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'embargo':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'torment':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ingrain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'aquaring':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shadowfountain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Shadow Fountain', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile1':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile2':\r\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile3':\r\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish0':\r\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish1':\r\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish2':\r\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish3':\r\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'encore':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'autotomize':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\r\n\t\t\t\tif (poke.volatiles.autotomize) {\r\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusenergy':\r\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'curse':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'nightmare':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magnetrise':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'smackdown':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Gen 1\r\n\t\t\tcase 'lightscreen':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reflect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile(effect.id);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-end': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.removeVolatile(effect.id);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'dynamax':\r\n\t\t\t\t\tthis.scene.animTransform(poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powertrick':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'telekinesis':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skydrop':\r\n\t\t\t\t\tif (kwArgs.interrupt) {\r\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healblock':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attract':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disable':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'embargo':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'torment':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bide':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'illusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\r\n\t\t\t\t\tpoke.rememberAbility('Illusion');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slowstart':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowsiren':\r\n\t\t\t\tcase 'perishsong': // for backwards compatibility\r\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stockpile':\r\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Prophetic Asteroid') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('propheticasteroidhit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Shadow Doomsday') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('shadowdoomsdayhit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singleturn': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addTurnstatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'roost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'matblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'endure':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'helpinghand':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focuspunch':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shelltrap':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beakblast':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singlemove': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tpoke.addMovestatus(effect.id);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'destinybond':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-activate': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]);\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'poltergeist':\r\n\t\t\t\tpoke.item = kwArgs.item;\r\n\t\t\t\tpoke.itemEffect = 'disturbed';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// move activations\r\n\t\t\tcase 'aromatherapy':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healbell':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'brickbreak':\r\n\t\t\tcase 'shadowshatter':\r\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\r\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hyperspacefury':\r\n\t\t\tcase 'hyperspacehole':\r\n\t\t\tcase 'phantomforce':\r\n\t\t\tcase 'shadowforce':\r\n\t\t\tcase 'feint':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\r\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\r\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\r\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'eeriespell':\r\n\t\t\tcase 'gmaxdepletion':\r\n\t\t\tcase 'shadowhatred':\r\n\t\t\tcase 'spite':\r\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\r\n\t\t\t\tlet pp = Number(kwArgs.number);\r\n\t\t\t\tif (isNaN(pp)) pp = 4;\r\n\t\t\t\tpoke.rememberMove(move, pp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'skillswap': case 'wanderingspirit':\r\n\t\t\t\tif (this.gen <= 4) break;\r\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\r\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\r\n\t\t\t\tif (pokeability) {\r\n\t\t\t\t\tpoke.ability = pokeability;\r\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\r\n\t\t\t\t}\r\n\t\t\t\tif (targetability) {\r\n\t\t\t\t\ttarget!.ability = targetability;\r\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\r\n\t\t\t\t}\r\n\t\t\t\tif (poke.side !== target!.side) {\r\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\r\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// ability activations\r\n\t\t\tcase 'forewarn':\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\r\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\r\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (foeActive.length === 1) {\r\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mummy':\r\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\r\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\r\n\t\t\t\tthis.activateAbility(target, ability.name);\r\n\t\t\t\tthis.activateAbility(poke, \"Mummy\");\r\n\t\t\t\tthis.scene.wait(700);\r\n\t\t\t\tthis.activateAbility(target, \"Mummy\", true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// item activations\r\n\t\t\tcase 'leppaberry':\r\n\t\t\tcase 'mysteryberry':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusband':\r\n\t\t\t\tpoke.item = 'Focus Band';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickclaw':\r\n\t\t\t\tpoke.item = 'Quick Claw';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sidestart': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tside.addSideCondition(effect);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'tailwind':\r\n\t\t\tcase 'auroraveil':\r\n\t\t\tcase 'reflect':\r\n\t\t\tcase 'lightscreen':\r\n\t\t\tcase 'safeguard':\r\n\t\t\tcase 'mist':\r\n\t\t\tcase 'gmaxwildfire':\r\n\t\t\tcase 'gmaxvolcalith':\r\n\t\t\tcase 'gmaxvinelash':\r\n\t\t\tcase 'gmaxcannonade':\r\n\t\t\tcase 'grasspledge':\r\n\t\t\tcase 'firepledge':\r\n\t\t\tcase 'waterpledge':\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sideend': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\r\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tside.removeSideCondition(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapsideconditions': {\r\n\t\t\tthis.swapSideConditions();\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-weather': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\r\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (!effect.id || effect.id === 'none') {\r\n\t\t\t\tkwArgs.from = this.weather;\r\n\t\t\t}\r\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldstart': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\tlet maxTimeLeft = 0;\r\n\t\t\tif (effect.id.endsWith('terrain')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\telse if (effect.id.endsWith('diffusion')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('diffusion')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\tthis.addPseudoWeather(effect.name, 5, maxTimeLeft);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tif (this.seeking !== null) break;\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\tif (active) this.scene.runOtherAnim('gravity' as ID, [active]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldend': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.removePseudoWeather(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldactivate': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'shadowsiren':\r\n\t\t\tcase 'perishsong':\r\n\t\t\t\tthis.scene.updateStatbars();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-anim': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-hint': case '-message': case '-candynamax': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\t/*\r\n\tparseSpriteData(name) {\r\n\t\tlet siden = 0,\r\n\t\t\tfoe = false;\r\n\t\twhile (true) {\r\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\r\n\t\t\t\tfoe = true;\r\n\t\t\t\tname = name.substr(6);\r\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\r\n\t\t\t\tsiden = this.p2.n;\r\n\t\t\t\tname = name.substr(4);\r\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\r\n\t\t\t\tsiden = this.p1.n;\r\n\t\t\t\tname = name.substr(5);\r\n\t\t\t} else break;\r\n\t\t}\r\n\t\tif (name.substr(name.length - 1) === ')') {\r\n\t\t\tlet parenIndex = name.lastIndexOf('(');\r\n\t\t\tif (parenIndex > 0) {\r\n\t\t\t\tlet species = name.substr(parenIndex + 1);\r\n\t\t\t\tname = species.substr(0, species.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foe) siden = (siden ? 0 : 1);\r\n\r\n\t\tlet data = Dex.species.get(name);\r\n\t\treturn data.spriteData[siden];\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * @param name Leave blank for Team Preview\r\n\t * @param pokemonid Leave blank for Team Preview\r\n\t * @param details\r\n\t * @param output\r\n\t */\r\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\r\n\t\tconst isTeamPreview = !name;\r\n\t\toutput.details = details;\r\n\t\toutput.name = name;\r\n\t\toutput.speciesForme = name;\r\n\t\toutput.level = 100;\r\n\t\toutput.shiny = false;\r\n\t\toutput.gender = '';\r\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\r\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\r\n\t\tlet splitDetails = details.split(', ');\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\r\n\t\t\toutput.shiny = true;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\r\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[1]) {\r\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\r\n\t\t}\r\n\t\tif (splitDetails[0]) {\r\n\t\t\toutput.speciesForme = splitDetails[0];\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\r\n\t\tlet [hp, status] = hpstring.split(' ');\r\n\r\n\t\t// hp parse\r\n\t\toutput.hpcolor = '';\r\n\t\tif (hp === '0' || hp === '0.0') {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = 0;\r\n\t\t} else if (hp.indexOf('/') > 0) {\r\n\t\t\tlet [curhp, maxhp] = hp.split('/');\r\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toutput.hp = parseFloat(curhp);\r\n\t\t\toutput.maxhp = parseFloat(maxhp);\r\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\r\n\t\t\tconst colorchar = maxhp.slice(-1);\r\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\r\n\t\t\t\toutput.hpcolor = colorchar;\r\n\t\t\t}\r\n\t\t} else if (!isNaN(parseFloat(hp))) {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\r\n\t\t}\r\n\r\n\t\t// status parse\r\n\t\tif (!status) {\r\n\t\t\toutput.status = '';\r\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'fnt') {\r\n\t\t\toutput.hp = 0;\r\n\t\t\toutput.fainted = true;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparsePokemonId(pokemonid: string) {\r\n\t\tlet name = pokemonid;\r\n\r\n\t\tlet siden = -1;\r\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\r\n\t\tif (/^p[1-9]($|: )/.test(name)) {\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tname = name.slice(4);\r\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\r\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tslot = slotChart[name.charAt(2)];\r\n\t\t\tname = name.slice(5);\r\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\r\n\t\t}\r\n\t\treturn {name, siden, slot, pokemonid};\r\n\t}\r\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\r\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\r\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\tconst searchid = `${pokemonid}|${details}`;\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search inactive revealed pokemon\r\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\tlet pokemon = side.pokemon[i];\r\n\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t// already active, can't be switching in\r\n\t\t\tif (side.active.includes(pokemon)) continue;\r\n\t\t\t// just switched out, can't be switching in\r\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\r\n\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\t// exact match\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\r\n\t\t\t\t// switch-in matches Team Preview entry\r\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// pokemon not found, create a new pokemon object for it\r\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\r\n\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\treturn pokemon;\r\n\t}\r\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\r\n\t\tconst {siden} = this.parsePokemonId(sideid);\r\n\r\n\t\treturn this.sides[siden].addPokemon('', '', details);\r\n\t}\r\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\r\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\r\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\r\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetPokemon(pokemonid: string | undefined) {\r\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\t/** if true, don't match an active pokemon */\r\n\t\tconst isInactive = (slot < 0);\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search player's pokemon\r\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\r\n\r\n\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\r\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tgetSide(sidename: string): Side {\r\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\r\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\r\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\r\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\r\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\r\n\t\tif (this.farSide.id === sidename) return this.farSide;\r\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\r\n\t\tif (this.farSide.name === sidename) return this.farSide;\r\n\t\treturn {\r\n\t\t\tname: sidename,\r\n\t\t\tid: sidename.replace(/ /g, ''),\r\n\t\t} as any;\r\n\t}\r\n\r\n\tadd(command?: string) {\r\n\t\tif (command) this.stepQueue.push(command);\r\n\r\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\r\n\t\t\tthis.atQueueEnd = false;\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * PS's preempt system is intended to show chat messages immediately,\r\n\t * instead of waiting for the battle to get to the point where the\r\n\t * message was said.\r\n\t *\r\n\t * In addition to being a nice quality-of-life feature, it's also\r\n\t * important to make sure timer updates happen in real-time.\r\n\t */\r\n\tinstantAdd(command: string) {\r\n\t\tthis.run(command, true);\r\n\t\tthis.preemptStepQueue.push(command);\r\n\t\tthis.add(command);\r\n\t}\r\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'start': {\r\n\t\t\tthis.nearSide.active[0] = null;\r\n\t\t\tthis.farSide.active[0] = null;\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tthis.start();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'upkeep': {\r\n\t\t\tthis.usesUpkeep = true;\r\n\t\t\tthis.updateTurnCounters();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'turn': {\r\n\t\t\tthis.setTurn(parseInt(args[1], 10));\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tier': {\r\n\t\t\tthis.tier = args[1];\r\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\r\n\t\t\t\tthis.speciesClause = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gametype': {\r\n\t\t\tthis.gameType = args[1] as any;\r\n\t\t\tswitch (args[1]) {\r\n\t\t\tcase 'multi':\r\n\t\t\tcase 'freeforall':\r\n\t\t\t\tthis.pokemonControlled = 1;\r\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\r\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\r\n\t\t\t\tthis.p3.foe = this.p2;\r\n\t\t\t\tthis.p4.foe = this.p1;\r\n\r\n\t\t\t\tif (args[1] === 'multi') {\r\n\t\t\t\t\tthis.p4.ally = this.p2;\r\n\t\t\t\t\tthis.p3.ally = this.p1;\r\n\t\t\t\t\tthis.p1.ally = this.p3;\r\n\t\t\t\t\tthis.p2.ally = this.p4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\r\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\r\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\r\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\r\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\r\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.nearSide.active = [null, null];\r\n\t\t\t\tthis.farSide.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples':\r\n\t\t\tcase 'rotation':\r\n\t\t\t\tthis.nearSide.active = [null, null, null];\r\n\t\t\t\tthis.farSide.active = [null, null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (const side of this.sides) side.active = [null];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rule': {\r\n\t\t\tlet ruleName = args[1].split(': ')[0];\r\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\r\n\t\t\tif (ruleName === 'Blitz') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rated': {\r\n\t\t\tthis.rated = args[1] || true;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactive': {\r\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\r\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\r\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\r\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\r\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\r\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\r\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\r\n\t\t\t\t// this is ugly but parseInt is documented to work this way\r\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\r\n\t\t\t\t// sentence\r\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\r\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\r\n\t\t\t\tlet userid = window.app?.user?.get('userid');\r\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\r\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\r\n\t\t\t\t}\r\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\r\n\t\t\t\tif (this.isBlitz) return;\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactiveoff': {\r\n\t\t\tthis.kickingInactive = false;\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'join': case 'j': case 'J': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'leave': case 'l': case 'L': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = args[1];\r\n\t\t\t\tlet userid = toUserid(user);\r\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\r\n\t\t\t\tdelete room.users[userid];\r\n\t\t\t\troom.userList.remove(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'name': case 'n': case 'N': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet oldid = args[2];\r\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\r\n\t\t\t\t\tapp!.user.set({\r\n\t\t\t\t\t\taway: user.away,\r\n\t\t\t\t\t\tstatus: user.status,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.remove(oldid);\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t}\r\n\t\t\tif (!this.ignoreSpects) {\r\n\t\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'player': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.setName(args[2]);\r\n\t\t\tif (args[3]) side.setAvatar(args[3]);\r\n\t\t\tif (args[4]) side.rating = args[4];\r\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\r\n\t\t\tthis.log(args);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teamsize': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'win': case 'tie': {\r\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'prematureend': {\r\n\t\t\tthis.prematureEnd();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'clearpoke': {\r\n\t\t\tthis.p1.clearPokemon();\r\n\t\t\tthis.p2.clearPokemon();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'poke': {\r\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\r\n\t\t\tif (args[3] === 'mail') {\r\n\t\t\t\tpokemon.item = '(mail)';\r\n\t\t\t} else if (args[3] === 'item') {\r\n\t\t\t\tpokemon.item = '(exists)';\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'updatepoke': {\r\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\tconst side = this.sides[siden];\r\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\t\tconst pokemon = side.pokemon[i];\r\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\r\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teampreview': {\r\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\r\n\t\t\tthis.scene.teamPreview();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switch': case 'drag': case 'replace': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\r\n\t\t\tlet slot = poke.slot;\r\n\t\t\tpoke.healthParse(args[3]);\r\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\r\n\t\t\tif (args[0] === 'switch') {\r\n\t\t\t\tif (poke.side.active[slot]) {\r\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!);\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.switchIn(poke);\r\n\t\t\t} else if (args[0] === 'replace') {\r\n\t\t\t\tpoke.side.replace(poke);\r\n\t\t\t} else {\r\n\t\t\t\tpoke.side.dragIn(poke);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'faint': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.side.faint(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'swap': {\r\n\t\t\tif (isNaN(Number(args[2]))) {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\r\n\t\t\t} else {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\r\n\t\t\t\tif (kwArgs.from) {\r\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\r\n\t\t\t\t\tif (target) args[2] = target.ident;\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.swapTo(poke, targetIndex, kwArgs);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'cant': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet move = Dex.moves.get(args[3]);\r\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gen': {\r\n\t\t\tthis.gen = parseInt(args[1], 10);\r\n\t\t\tthis.dex = Dex.forGen(this.gen);\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'callback': {\r\n\t\t\tthis.subscription?.('callback');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'fieldhtml': {\r\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'controlshtml': {\r\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthis.log(args, kwArgs, preempt);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\r\n\trun(str: string, preempt?: boolean) {\r\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\r\n\t\t\tthis.preemptStepQueue.shift();\r\n\t\t\tthis.scene.preemptCatchup();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!str) return;\r\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\r\n\r\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\r\n\t\t\tthis.currentStep--;\r\n\t\t\tthis.activeMoveIsSpread = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\r\n\t\tlet nextArgs: Args = [''];\r\n\t\tlet nextKwargs: KWArgs = {};\r\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\r\n\t\tif (nextLine.slice(0, 2) === '|-') {\r\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\r\n\t\t\t\tif (err.stack) {\r\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\r\n\t\t\t\t\tfor (const line of stack) {\r\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.log(['error', line]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\r\n\t\t\tif (this.turn === -1) {\r\n\t\t\t\tthis.turn = 0;\r\n\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcheckActive(poke: Pokemon) {\r\n\t\tif (!poke.side.active[poke.slot]) {\r\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\r\n\t\t\tpoke.side.replace(poke);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\t/**\r\n\t * Properties relevant to battle playback, for replay UI implementers:\r\n\t * - `ended`: has the game ended in a win/loss?\r\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\r\n\t * - `seeking`: are we trying to skip to a specific turn\r\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\r\n\t * - `paused`: are we playing at all?\r\n\t */\r\n\tplay() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.scene.resume();\r\n\t\tthis.nextStep();\r\n\t\tthis.subscription?.('playing');\r\n\t}\r\n\tskipTurn() {\r\n\t\tthis.seekTurn(this.turn + 1);\r\n\t}\r\n\tseekTurn(turn: number, forceReset?: boolean) {\r\n\t\tif (isNaN(turn)) return;\r\n\t\tturn = Math.max(Math.floor(turn), 0);\r\n\r\n\t\tif (this.seeking !== null && this.seeking > turn && !forceReset) {\r\n\t\t\tthis.seeking = turn;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (turn === 0) {\r\n\t\t\tthis.seeking = null;\r\n\t\t\tthis.resetStep();\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tif (this.paused) this.subscription?.('paused');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.seeking = turn;\r\n\r\n\t\tif (turn <= this.turn || forceReset) {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.resetStep();\r\n\t\t} else if (this.atQueueEnd) {\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tthis.seeking = null;\r\n\t\t} else {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\tstopSeeking() {\r\n\t\tthis.seeking = null;\r\n\t\tthis.scene.animationOn();\r\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\r\n\t}\r\n\tshouldStep() {\r\n\t\tif (this.atQueueEnd) return false;\r\n\t\tif (this.seeking !== null) return true;\r\n\t\treturn !(this.paused && this.turn >= 0);\r\n\t}\r\n\tnextStep() {\r\n\t\tif (!this.shouldStep()) return;\r\n\r\n\t\tthis.scene.startAnimations();\r\n\t\tlet animations = undefined;\r\n\r\n\t\tdo {\r\n\t\t\tthis.waitForAnimations = true;\r\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\r\n\t\t\t\tthis.atQueueEnd = true;\r\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t\tif (this.ended) {\r\n\t\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('atqueueend');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\r\n\t\t\tthis.currentStep++;\r\n\t\t\tif (this.waitForAnimations === true) {\r\n\t\t\t\tanimations = this.scene.finishAnimations();\r\n\t\t\t} else if (this.waitForAnimations === 'simult') {\r\n\t\t\t\tthis.scene.timeOffset = 0;\r\n\t\t\t}\r\n\t\t} while (!animations && this.shouldStep());\r\n\r\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\r\n\t\t\t// initial Play button, team preview\r\n\t\t\tthis.scene.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!animations) return;\r\n\r\n\t\tconst interruptionCount = this.scene.interruptionCount;\r\n\t\tanimations.done(() => {\r\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\tthis.nextStep();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetQueue(queue: string[]) {\r\n\t\tthis.stepQueue = queue;\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetMute(mute: boolean) {\r\n\t\tBattleSound.setMute(mute);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Battle = Battle;\r\n\t(global as any).Pokemon = Pokemon;\r\n}\r\n"],"file":"battle.js"}